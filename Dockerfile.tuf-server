# Build the tuf server binary
FROM brew.registry.redhat.io/rh-osbs/openshift-golang-builder@sha256:98a0ff138c536eee98704d6909699ad5d0725a20573e2c510a60ef462b45cce0 AS build-env
WORKDIR /tuf-server
RUN git config --global --add safe.directory /tuf-server

COPY . .
USER root
RUN go mod vendor
RUN make build-tuf-server

# Install server
FROM registry.access.redhat.com/ubi9/ubi-minimal@sha256:3e313209ac617a92b50350286752311d99ea2dafc429ef0e5311889294b0bc21
COPY --from=build-env /tuf-server/server /usr/local/bin/tuf-server
RUN chown root:0 /usr/local/bin/tuf-server && chmod g+wx /usr/local/bin/tuf-server

#Configure home directory
ENV HOME=/home
RUN chgrp -R 0 /${HOME} && chmod -R g=u /${HOME}

WORKDIR ${HOME}

LABEL description="Binary for the TUF (The Update Framework) server."
LABEL io.k8s.description="Binary for the TUF (The Update Framework) server."
LABEL io.k8s.display-name="TUF server container image for Red Hat Trusted Artifact Signer."
LABEL io.openshift.tags="TUF-server, Red Hat trusted artifact signer."
LABEL summary="Provides the TUF server binary."
LABEL com.redhat.component="tuf-server"

# Set the binary as the entrypoint of the container
ENTRYPOINT ["tuf-server"]
